<Project Sdk="Microsoft.NET.Sdk.BlazorWebAssembly">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="6.0.20" />
    <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="6.0.20" PrivateAssets="all" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
    <PackageReference Include="NSwag.MSBuild" Version="13.20.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <PropertyGroup>
    <RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
  </PropertyGroup>

  <!--<Target Name="LocalhostEnvironmentVariables" AfterTargets="PostBuildEvent" Condition="'$(ASPNETCORE_ENVIRONMENT)' == ''">
    <PropertyGroup>
      <ASPNETCORE_ENVIRONMENT Condition="'$(ASPNETCORE_ENVIRONMENT)'==''">Development</ASPNETCORE_ENVIRONMENT>
    </PropertyGroup>
  </Target>-->

  <!-- NSwag Generation -->
  <Target Name="SetOpenApiUrl" AfterTargets="PostBuildEvent">
    <PropertyGroup>
		<!-- In reality, this would be a localhost Url -->
      <SwaggerLocation Condition="'$(ASPNETCORE_ENVIRONMENT)'==''">https://petstore.swagger.io/v2/swagger.json</SwaggerLocation>
      <SwaggerLocation Condition="'$(ASPNETCORE_ENVIRONMENT)'=='Development'">https://petstore.swagger.io/v2/swagger.json</SwaggerLocation>
      <SwaggerLocation Condition="'$(ASPNETCORE_ENVIRONMENT)'=='Staging'">http://redocly.github.io/redoc/openapi.yaml</SwaggerLocation>
      <SwaggerLocation Condition="'$(ASPNETCORE_ENVIRONMENT)'=='Production'">https://petstore.swagger.io/v2/swagger.json</SwaggerLocation>
    </PropertyGroup>
  </Target>
    
  <Target Name="NSwag" AfterTargets="PostBuildEvent">
    <Exec WorkingDirectory="$(ProjectDir)" Command="$(NSwagExe_Net60) run Client/redocly.nswag /variables:Configuration=$(Configuration),SwaggerLocation=$(SwaggerLocation)">
      <Output TaskParameter="ExitCode" PropertyName="NSwagExitCode" />
      <Output TaskParameter="ConsoleOutput" PropertyName="NSwagOutput" />
    </Exec>

    <Message Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' == '0'" Importance="low" />
    <Error Text="$(NSwagOutput)" Condition="'$(NSwagExitCode)' != '0'" />
  </Target>
  <!-- NSwag Generation -->
    
</Project>
